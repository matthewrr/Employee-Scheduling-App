{"changed":true,"filter":false,"title":"models.py","tooltip":"/locations/models.py","value":"from django.db import models\nfrom django.utils import timezone\n\nclass LocationCategory(models.Model):\n    category_name   = models.CharField(max_length=256,null=True, blank=True)\n    color           = models.CharField(max_length=256,null=True, blank=True)\n    \n    def __str__(self):\n        return self.category_name\n    \n    class Meta:\n        verbose_name_plural = 'Location Categories'\n\nclass Location(models.Model):\n    location_id = models.CharField(max_length=256,null=True, blank=True,verbose_name='Location ID')\n    category    = models.ForeignKey(LocationCategory, on_delete=models.SET_NULL,null=True, blank=True)\n    title       = models.CharField(max_length=256)\n    bar         = models.BooleanField(default=False)\n    created     = models.DateTimeField(editable=False,null=True)\n    modified    = models.DateTimeField(null=True)\n\n    def save(self, *args, **kwargs):\n        if not self.id:\n            self.created = timezone.now()\n        self.modified = timezone.now()\n        return super(Location, self).save(*args, **kwargs)\n    \n    @property\n    def positions_length(self):\n        return len(self.position_set.all())\n    \n    class Meta:\n        ordering = ['location_id']\n\n    def __str__(self):\n        return self.title\n\nclass Position(models.Model):\n   location = models.ForeignKey(Location, on_delete=models.CASCADE,null=True, blank=True)\n   verbose_name = models.CharField(max_length=256)\n   short_name = models.CharField(max_length=8)\n   code = models.CharField(max_length=8)\n   \n   def __str__(self):\n       return self.verbose_name","undoManager":{"mark":-2,"position":16,"stack":[[{"start":{"row":17,"column":8},"end":{"row":17,"column":12},"action":"insert","lines":["    "],"id":1}],[{"start":{"row":17,"column":12},"end":{"row":17,"column":16},"action":"insert","lines":["    "],"id":2}],[{"start":{"row":17,"column":16},"end":{"row":17,"column":20},"action":"insert","lines":["    "],"id":3}],[{"start":{"row":17,"column":16},"end":{"row":17,"column":20},"action":"remove","lines":["    "],"id":4}],[{"start":{"row":17,"column":16},"end":{"row":17,"column":17},"action":"insert","lines":[" "],"id":5}],[{"start":{"row":15,"column":13},"end":{"row":15,"column":16},"action":"insert","lines":["   "],"id":6}],[{"start":{"row":15,"column":16},"end":{"row":15,"column":20},"action":"insert","lines":["    "],"id":7}],[{"start":{"row":15,"column":16},"end":{"row":15,"column":20},"action":"remove","lines":["    "],"id":8}],[{"start":{"row":16,"column":10},"end":{"row":16,"column":12},"action":"insert","lines":["  "],"id":9}],[{"start":{"row":16,"column":12},"end":{"row":16,"column":16},"action":"insert","lines":["    "],"id":10}],[{"start":{"row":17,"column":16},"end":{"row":17,"column":17},"action":"remove","lines":[" "],"id":11}],[{"start":{"row":18,"column":16},"end":{"row":18,"column":17},"action":"remove","lines":[" "],"id":12}],[{"start":{"row":19,"column":16},"end":{"row":19,"column":17},"action":"remove","lines":[" "],"id":13}],[{"start":{"row":5,"column":10},"end":{"row":5,"column":12},"action":"insert","lines":["  "],"id":14}],[{"start":{"row":5,"column":12},"end":{"row":5,"column":16},"action":"insert","lines":["    "],"id":15}],[{"start":{"row":5,"column":16},"end":{"row":5,"column":20},"action":"insert","lines":["    "],"id":16}],[{"start":{"row":4,"column":18},"end":{"row":4,"column":20},"action":"insert","lines":["  "],"id":17}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":20,"column":0},"end":{"row":20,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":58,"mode":"ace/mode/python"}},"timestamp":1535916514311}